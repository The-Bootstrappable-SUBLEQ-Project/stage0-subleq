# Copyright (C) 2022 NyanCatTW1
# This file is part of stage0-subleq.

# stage0-subleq is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# stage0-subleq is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with stage0-subleq. If not, see <http://www.gnu.org/licenses/>.

# Standard program start
; addr ZERO 0
; var tmp 0
; addr SERIAL_IN 13ED27E8
; addr SERIAL_OUT 13ED27F0
0000000000000000 0000000000000000 0000000000000018 ; lblsq ZERO ZERO EP

; label EP
; var c 0

# Output 'H'

# Start set c 72
00000000000009f8 00000000000009f8 0000000000000030 ; relsq c c 1
00000000000009f8 0000000000000a00 0000000000000048 ; relsq c CONST_-48 1
# End set


# Start putchar c tmp
0000000013ed27f0 0000000000000000 0000000000000078 ; relsq SERIAL_OUT ZERO 2
# reljmp -1
0000000000000000 0000000000000000 0000000000000048 ; relsq ZERO ZERO -1

# Start mov SERIAL_OUT c tmp
# movneg tmp c
00000000000009f0 00000000000009f0 0000000000000090 ; relsq tmp tmp 1
00000000000009f0 00000000000009f8 00000000000000a8 ; relsq tmp c 1
# movneg SERIAL_OUT tmp
0000000013ed27f0 0000000013ed27f0 00000000000000c0 ; relsq SERIAL_OUT SERIAL_OUT 1
0000000013ed27f0 00000000000009f0 00000000000000d8 ; relsq SERIAL_OUT tmp 1
# End mov

# End putchar


# Output 'e'

# Start set c 101
00000000000009f8 00000000000009f8 00000000000000f0 ; relsq c c 1
00000000000009f8 0000000000000a08 0000000000000108 ; relsq c CONST_-65 1
# End set


# Start putchar c tmp
0000000013ed27f0 0000000000000000 0000000000000138 ; relsq SERIAL_OUT ZERO 2
# reljmp -1
0000000000000000 0000000000000000 0000000000000108 ; relsq ZERO ZERO -1

# Start mov SERIAL_OUT c tmp
# movneg tmp c
00000000000009f0 00000000000009f0 0000000000000150 ; relsq tmp tmp 1
00000000000009f0 00000000000009f8 0000000000000168 ; relsq tmp c 1
# movneg SERIAL_OUT tmp
0000000013ed27f0 0000000013ed27f0 0000000000000180 ; relsq SERIAL_OUT SERIAL_OUT 1
0000000013ed27f0 00000000000009f0 0000000000000198 ; relsq SERIAL_OUT tmp 1
# End mov

# End putchar


# Output 'l'

# Start set c 108
00000000000009f8 00000000000009f8 00000000000001b0 ; relsq c c 1
00000000000009f8 0000000000000a10 00000000000001c8 ; relsq c CONST_-6C 1
# End set


# Start putchar c tmp
0000000013ed27f0 0000000000000000 00000000000001f8 ; relsq SERIAL_OUT ZERO 2
# reljmp -1
0000000000000000 0000000000000000 00000000000001c8 ; relsq ZERO ZERO -1

# Start mov SERIAL_OUT c tmp
# movneg tmp c
00000000000009f0 00000000000009f0 0000000000000210 ; relsq tmp tmp 1
00000000000009f0 00000000000009f8 0000000000000228 ; relsq tmp c 1
# movneg SERIAL_OUT tmp
0000000013ed27f0 0000000013ed27f0 0000000000000240 ; relsq SERIAL_OUT SERIAL_OUT 1
0000000013ed27f0 00000000000009f0 0000000000000258 ; relsq SERIAL_OUT tmp 1
# End mov

# End putchar


# Output 'l'

# Start set c 108
00000000000009f8 00000000000009f8 0000000000000270 ; relsq c c 1
00000000000009f8 0000000000000a10 0000000000000288 ; relsq c CONST_-6C 1
# End set


# Start putchar c tmp
0000000013ed27f0 0000000000000000 00000000000002b8 ; relsq SERIAL_OUT ZERO 2
# reljmp -1
0000000000000000 0000000000000000 0000000000000288 ; relsq ZERO ZERO -1

# Start mov SERIAL_OUT c tmp
# movneg tmp c
00000000000009f0 00000000000009f0 00000000000002d0 ; relsq tmp tmp 1
00000000000009f0 00000000000009f8 00000000000002e8 ; relsq tmp c 1
# movneg SERIAL_OUT tmp
0000000013ed27f0 0000000013ed27f0 0000000000000300 ; relsq SERIAL_OUT SERIAL_OUT 1
0000000013ed27f0 00000000000009f0 0000000000000318 ; relsq SERIAL_OUT tmp 1
# End mov

# End putchar


# Output 'o'

# Start set c 111
00000000000009f8 00000000000009f8 0000000000000330 ; relsq c c 1
00000000000009f8 0000000000000a18 0000000000000348 ; relsq c CONST_-6F 1
# End set


# Start putchar c tmp
0000000013ed27f0 0000000000000000 0000000000000378 ; relsq SERIAL_OUT ZERO 2
# reljmp -1
0000000000000000 0000000000000000 0000000000000348 ; relsq ZERO ZERO -1

# Start mov SERIAL_OUT c tmp
# movneg tmp c
00000000000009f0 00000000000009f0 0000000000000390 ; relsq tmp tmp 1
00000000000009f0 00000000000009f8 00000000000003a8 ; relsq tmp c 1
# movneg SERIAL_OUT tmp
0000000013ed27f0 0000000013ed27f0 00000000000003c0 ; relsq SERIAL_OUT SERIAL_OUT 1
0000000013ed27f0 00000000000009f0 00000000000003d8 ; relsq SERIAL_OUT tmp 1
# End mov

# End putchar


# Output ','

# Start set c 44
00000000000009f8 00000000000009f8 00000000000003f0 ; relsq c c 1
00000000000009f8 0000000000000a20 0000000000000408 ; relsq c CONST_-2C 1
# End set


# Start putchar c tmp
0000000013ed27f0 0000000000000000 0000000000000438 ; relsq SERIAL_OUT ZERO 2
# reljmp -1
0000000000000000 0000000000000000 0000000000000408 ; relsq ZERO ZERO -1

# Start mov SERIAL_OUT c tmp
# movneg tmp c
00000000000009f0 00000000000009f0 0000000000000450 ; relsq tmp tmp 1
00000000000009f0 00000000000009f8 0000000000000468 ; relsq tmp c 1
# movneg SERIAL_OUT tmp
0000000013ed27f0 0000000013ed27f0 0000000000000480 ; relsq SERIAL_OUT SERIAL_OUT 1
0000000013ed27f0 00000000000009f0 0000000000000498 ; relsq SERIAL_OUT tmp 1
# End mov

# End putchar


# Output ' '

# Start set c 32
00000000000009f8 00000000000009f8 00000000000004b0 ; relsq c c 1
00000000000009f8 0000000000000a28 00000000000004c8 ; relsq c CONST_-20 1
# End set


# Start putchar c tmp
0000000013ed27f0 0000000000000000 00000000000004f8 ; relsq SERIAL_OUT ZERO 2
# reljmp -1
0000000000000000 0000000000000000 00000000000004c8 ; relsq ZERO ZERO -1

# Start mov SERIAL_OUT c tmp
# movneg tmp c
00000000000009f0 00000000000009f0 0000000000000510 ; relsq tmp tmp 1
00000000000009f0 00000000000009f8 0000000000000528 ; relsq tmp c 1
# movneg SERIAL_OUT tmp
0000000013ed27f0 0000000013ed27f0 0000000000000540 ; relsq SERIAL_OUT SERIAL_OUT 1
0000000013ed27f0 00000000000009f0 0000000000000558 ; relsq SERIAL_OUT tmp 1
# End mov

# End putchar


# Output 'w'

# Start set c 87
00000000000009f8 00000000000009f8 0000000000000570 ; relsq c c 1
00000000000009f8 0000000000000a30 0000000000000588 ; relsq c CONST_-57 1
# End set


# Start putchar c tmp
0000000013ed27f0 0000000000000000 00000000000005b8 ; relsq SERIAL_OUT ZERO 2
# reljmp -1
0000000000000000 0000000000000000 0000000000000588 ; relsq ZERO ZERO -1

# Start mov SERIAL_OUT c tmp
# movneg tmp c
00000000000009f0 00000000000009f0 00000000000005d0 ; relsq tmp tmp 1
00000000000009f0 00000000000009f8 00000000000005e8 ; relsq tmp c 1
# movneg SERIAL_OUT tmp
0000000013ed27f0 0000000013ed27f0 0000000000000600 ; relsq SERIAL_OUT SERIAL_OUT 1
0000000013ed27f0 00000000000009f0 0000000000000618 ; relsq SERIAL_OUT tmp 1
# End mov

# End putchar


# Output 'o'

# Start set c 111
00000000000009f8 00000000000009f8 0000000000000630 ; relsq c c 1
00000000000009f8 0000000000000a18 0000000000000648 ; relsq c CONST_-6F 1
# End set


# Start putchar c tmp
0000000013ed27f0 0000000000000000 0000000000000678 ; relsq SERIAL_OUT ZERO 2
# reljmp -1
0000000000000000 0000000000000000 0000000000000648 ; relsq ZERO ZERO -1

# Start mov SERIAL_OUT c tmp
# movneg tmp c
00000000000009f0 00000000000009f0 0000000000000690 ; relsq tmp tmp 1
00000000000009f0 00000000000009f8 00000000000006a8 ; relsq tmp c 1
# movneg SERIAL_OUT tmp
0000000013ed27f0 0000000013ed27f0 00000000000006c0 ; relsq SERIAL_OUT SERIAL_OUT 1
0000000013ed27f0 00000000000009f0 00000000000006d8 ; relsq SERIAL_OUT tmp 1
# End mov

# End putchar


# Output 'r'

# Start set c 114
00000000000009f8 00000000000009f8 00000000000006f0 ; relsq c c 1
00000000000009f8 0000000000000a38 0000000000000708 ; relsq c CONST_-72 1
# End set


# Start putchar c tmp
0000000013ed27f0 0000000000000000 0000000000000738 ; relsq SERIAL_OUT ZERO 2
# reljmp -1
0000000000000000 0000000000000000 0000000000000708 ; relsq ZERO ZERO -1

# Start mov SERIAL_OUT c tmp
# movneg tmp c
00000000000009f0 00000000000009f0 0000000000000750 ; relsq tmp tmp 1
00000000000009f0 00000000000009f8 0000000000000768 ; relsq tmp c 1
# movneg SERIAL_OUT tmp
0000000013ed27f0 0000000013ed27f0 0000000000000780 ; relsq SERIAL_OUT SERIAL_OUT 1
0000000013ed27f0 00000000000009f0 0000000000000798 ; relsq SERIAL_OUT tmp 1
# End mov

# End putchar


# Output 'l'

# Start set c 108
00000000000009f8 00000000000009f8 00000000000007b0 ; relsq c c 1
00000000000009f8 0000000000000a10 00000000000007c8 ; relsq c CONST_-6C 1
# End set


# Start putchar c tmp
0000000013ed27f0 0000000000000000 00000000000007f8 ; relsq SERIAL_OUT ZERO 2
# reljmp -1
0000000000000000 0000000000000000 00000000000007c8 ; relsq ZERO ZERO -1

# Start mov SERIAL_OUT c tmp
# movneg tmp c
00000000000009f0 00000000000009f0 0000000000000810 ; relsq tmp tmp 1
00000000000009f0 00000000000009f8 0000000000000828 ; relsq tmp c 1
# movneg SERIAL_OUT tmp
0000000013ed27f0 0000000013ed27f0 0000000000000840 ; relsq SERIAL_OUT SERIAL_OUT 1
0000000013ed27f0 00000000000009f0 0000000000000858 ; relsq SERIAL_OUT tmp 1
# End mov

# End putchar


# Output 'd'

# Start set c 100
00000000000009f8 00000000000009f8 0000000000000870 ; relsq c c 1
00000000000009f8 0000000000000a40 0000000000000888 ; relsq c CONST_-64 1
# End set


# Start putchar c tmp
0000000013ed27f0 0000000000000000 00000000000008b8 ; relsq SERIAL_OUT ZERO 2
# reljmp -1
0000000000000000 0000000000000000 0000000000000888 ; relsq ZERO ZERO -1

# Start mov SERIAL_OUT c tmp
# movneg tmp c
00000000000009f0 00000000000009f0 00000000000008d0 ; relsq tmp tmp 1
00000000000009f0 00000000000009f8 00000000000008e8 ; relsq tmp c 1
# movneg SERIAL_OUT tmp
0000000013ed27f0 0000000013ed27f0 0000000000000900 ; relsq SERIAL_OUT SERIAL_OUT 1
0000000013ed27f0 00000000000009f0 0000000000000918 ; relsq SERIAL_OUT tmp 1
# End mov

# End putchar


# Output '!'

# Start set c 33
00000000000009f8 00000000000009f8 0000000000000930 ; relsq c c 1
00000000000009f8 0000000000000a48 0000000000000948 ; relsq c CONST_-21 1
# End set


# Start putchar c tmp
0000000013ed27f0 0000000000000000 0000000000000978 ; relsq SERIAL_OUT ZERO 2
# reljmp -1
0000000000000000 0000000000000000 0000000000000948 ; relsq ZERO ZERO -1

# Start mov SERIAL_OUT c tmp
# movneg tmp c
00000000000009f0 00000000000009f0 0000000000000990 ; relsq tmp tmp 1
00000000000009f0 00000000000009f8 00000000000009a8 ; relsq tmp c 1
# movneg SERIAL_OUT tmp
0000000013ed27f0 0000000013ed27f0 00000000000009c0 ; relsq SERIAL_OUT SERIAL_OUT 1
0000000013ed27f0 00000000000009f0 00000000000009d8 ; relsq SERIAL_OUT tmp 1
# End mov

# End putchar


# Infinite loop
0000000000000000 0000000000000000 00000000000009d8 ; relsq ZERO ZERO 0

; var CONST_-48 -48
; var CONST_-65 -65
; var CONST_-6C -6c
; var CONST_-6F -6f
; var CONST_-2C -2c
; var CONST_-20 -20
; var CONST_-57 -57
; var CONST_-72 -72
; var CONST_-64 -64
; var CONST_-21 -21

0000000000000000 ; raw 0000000000000000 # tmp
0000000000000000 ; raw 0000000000000000 # c
ffffffffffffffb8 ; raw ffffffffffffffb8 # CONST_-48
ffffffffffffff9b ; raw ffffffffffffff9b # CONST_-65
ffffffffffffff94 ; raw ffffffffffffff94 # CONST_-6C
ffffffffffffff91 ; raw ffffffffffffff91 # CONST_-6F
ffffffffffffffd4 ; raw ffffffffffffffd4 # CONST_-2C
ffffffffffffffe0 ; raw ffffffffffffffe0 # CONST_-20
ffffffffffffffa9 ; raw ffffffffffffffa9 # CONST_-57
ffffffffffffff8e ; raw ffffffffffffff8e # CONST_-72
ffffffffffffff9c ; raw ffffffffffffff9c # CONST_-64
ffffffffffffffdf ; raw ffffffffffffffdf # CONST_-21
